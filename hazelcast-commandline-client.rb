# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class HazelcastCommandlineClient < Formula
  desc "Hazelcast Command-line Client Project"
  homepage "https://github.com/hazelcast/hazelcast-commandline-client"
  version "0.0.1-goreleaser"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/hazelcast/hazelcast-commandline-client/releases/download/v0.0.1-goreleaser/hazelcast-commandline-client_0.0.1-goreleaser_Darwin_arm64.tar.gz"
      sha256 "063e2270b9213a306d3cd629b7ef333116bdef712d3e926d8f292cd6c82577b0"

      def install
        bin.install "hzc"
        bash_completion.install "extras/bash_completion.sh"
        zsh_completion.install "extras/zsh_completion.zsh" => "_hzc"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/hazelcast/hazelcast-commandline-client/releases/download/v0.0.1-goreleaser/hazelcast-commandline-client_0.0.1-goreleaser_Darwin_x86_64.tar.gz"
      sha256 "9255bddeace675dc2f33a24f648f7ee55585bf201a2fdc679d423894d2afa950"

      def install
        bin.install "hzc"
        bash_completion.install "extras/bash_completion.sh"
        zsh_completion.install "extras/zsh_completion.zsh" => "_hzc"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/hazelcast/hazelcast-commandline-client/releases/download/v0.0.1-goreleaser/hazelcast-commandline-client_0.0.1-goreleaser_Linux_arm64.tar.gz"
      sha256 "df54b0dde620cf86bf92057d3872c7ee332a2a3636fd6860109005dabd372d58"

      def install
        bin.install "hzc"
        bash_completion.install "extras/bash_completion.sh"
        zsh_completion.install "extras/zsh_completion.zsh" => "_hzc"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/hazelcast/hazelcast-commandline-client/releases/download/v0.0.1-goreleaser/hazelcast-commandline-client_0.0.1-goreleaser_Linux_x86_64.tar.gz"
      sha256 "76e42270b8e3377e56b2da7b6e2d774a7c4b4649c706796c0be3de9d4568738f"

      def install
        bin.install "hzc"
        bash_completion.install "extras/bash_completion.sh"
        zsh_completion.install "extras/zsh_completion.zsh" => "_hzc"
      end
    end
  end

  def post_install
    ohai "Example usages:
    * `hzc` - start an interactive shell 🚀
    * `hzc map --name my-map put --key hello --value world` - put entry into map"
        completion_warning = <<~EOS
          ⚠️  To have superior experience, enable autocompletion on Brew. ⚠️
          You need to enable autocompletion just once for Brew. If it is already enabled, you can skip this part.
          ▪ For Bash users:
            1) `brew install bash-completion` and follow the printed \"Caveats\" section. Example \"Caveats\" instructions:
               Add the following line to your ~/.bash_profile:
               # !! Note that paths may differ depending on your installation, so you should follow the Caveats section on your system.
               [[ -r \"/home/ubuntu/.linuxbrew/etc/profile.d/bash_completion.sh\" ]] && . \"/home/ubuntu/.linuxbrew/etc/profile.d/bash_completion.sh\"
            2) `source ~/.bash_profile`
          ▪ For Zsh users:
          Follow https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
        EOS
        print completion_warning
  end

  def caveats; <<~EOS
    How to use this binary
  EOS
  end
end
